/* @macrome
 * @generatedby @bablr/macrome-generator-bablr
 * @generatedfrom ./grammar.macro.js#bac3340926df1186e4b6e012d048717d42191b0e
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import _applyDecs from "@babel/runtime/helpers/applyDecs2305";
var _functionMixin;
let _initProto, _KeywordDecs, _PunctuatorDecs, _AnyDecs;
import { i } from '@bablr/boot';
import { Node, InjectFrom } from '@bablr/helpers/decorators';
import { triviaEnhancer } from '@bablr/helpers/trivia';
import * as productions from '@bablr/helpers/productions';
import * as Comment from '@bablr/language-en-c-comments';
import { mixin as functionMixin } from './mixins/function.js';
import { mixin as jsonMixin } from './mixins/json.js';
import { mixin as statementMixin } from './mixins/statement.js';
import { mixin as variablesMixin } from './mixins/variables.js';
import { mixin as logicMixin } from './mixins/logic.js';
import * as Regex from './regex.js';
export const dependencies = {
  Regex,
  Comment
};
export const canonicalURL = 'https://bablr.org/languages/universe/es3';
export const atrivialGrammar = class ES3Grammar extends (_functionMixin = functionMixin(jsonMixin(statementMixin(variablesMixin(logicMixin(Object)))))) {
  static {
    [_initProto] = _applyDecs(this, [[_KeywordDecs, 2, "Keyword"], [_PunctuatorDecs, 2, "Punctuator"], [_AnyDecs, 2, "Any"]], [], 0, void 0, _functionMixin).e;
  }
  constructor(...args) {
    super(...args);
    _initProto(this);
  }
  *[(_KeywordDecs = [Node, InjectFrom(productions)], _PunctuatorDecs = [Node, InjectFrom(productions)], _AnyDecs = InjectFrom(productions), "Keyword")]() {}
  *Punctuator() {}
  *Any() {}
};
export const grammar = triviaEnhancer({
  triviaIsAllowed: s => s.span === 'Bare',
  *eatMatchTrivia() {
    if (yield i`match(/[ \n\r\t]|\/\/|\/\*/)`) {
      yield i`eat(<#*Comment:Trivia />)`;
    }
  }
}, atrivialGrammar);